(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{479:function(t,a,s){"use strict";s.r(a);var n=s(480),e=s.n(n);for(var r in n)["default"].indexOf(r)<0&&function(t){s.d(a,t,(function(){return n[t]}))}(r);a.default=e.a},480:function(t,a){},557:function(t,a,s){"use strict";s.d(a,"a",(function(){return n})),s.d(a,"b",(function(){return e}));var n=function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),s("p",[t._v("javaScript三部分")]),t._v(" "),s("p",[t._v("ECMAScript+DOM+BOM")]),t._v(" "),s("p",[t._v("动态语言，不确定变量类型，在代码执行过程中，可以随意修改")]),t._v(" "),s("p",[t._v('var name="abc";\t\t//string类型')]),t._v(" "),s("p",[t._v("name=123;\t\t\t//整型")]),t._v(" "),s("p",[t._v("编译性语言：")]),t._v(" "),s("p",[t._v("​\t先编译再运行")]),t._v(" "),s("p",[t._v("​\tc／c++／Objective-C／...")]),t._v(" "),s("p",[t._v("解释性语言：")]),t._v(" "),s("p",[t._v("​\t边读边运行")]),t._v(" "),s("p",[t._v("​\tPython/JavaScript/MATLAB")]),t._v(" "),s("p",[t._v("书写位置")]),t._v(" "),s("p",[t._v("html标签里")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<a href="" onclick="alert(\'弹窗\')">弹窗</a>\n')])])]),s("p",[t._v("body里")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<script>\n\talert('弹窗');\n<\/script>\n")])])]),s("p",[t._v("外部引入")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script src="./js/test.js"><\/script>\n')])])]),s("p",[t._v("#4_变量、作用域、内存")]),t._v(" "),s("p",[t._v("编写代码存储在硬盘中，")]),t._v(" "),s("p",[t._v("代码在内存中执行，内存有栈空间堆空间，")]),t._v(" "),s("p",[t._v("基本数据类型在栈空间分配，")]),t._v(" "),s("p",[t._v("对象类型在堆空间，栈空间指针指向堆空间")]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("p",[t._v("变量包括两种不同的类型：原始值和引用值")]),t._v(" "),s("p",[t._v("原始值就是最简单的数据，保存原始值的变量是按值访问的")]),t._v(" "),s("p",[t._v("​\tUndefined、Null、Boolean、Number、String、Symbol")]),t._v(" "),s("p",[t._v("引用值：多个值构成的对象，保存在内存中，js不能直接访问内存位置，实际操作的是该对象的引用，保存引用值的变量按照引用访问")]),t._v(" "),s("p",[t._v("​\tArray、object")]),t._v(" "),s("h2",{attrs:{id:"执行上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),s("p",[t._v("JS为每段可执行代码创建其执行上下文")]),t._v(" "),s("p",[t._v("可执行代码：全局代码、函数代码、eval代码")]),t._v(" "),s("p",[t._v("所以就有：全局上下文、函数上下文")]),t._v(" "),s("p",[t._v("函数被调用执行就会创建这个函数的执行上下文，这个函数的执行上下文会被推到执行上下文栈上")]),t._v(" "),s("p",[t._v("上下文在其所有代码都执行完毕后会被销毁，包括定义在它上面的所有变量和函数(全局上下文在应用程 退出前才会被销毁，比如关闭网页或退出浏览器)。")]),t._v(" "),s("p",[t._v("每个执行上下文的都有三个重要属性：")]),t._v(" "),s("p",[t._v("变量对象")]),t._v(" "),s("p",[t._v("作用域链")]),t._v(" "),s("p",[t._v("this")]),t._v(" "),s("h3",{attrs:{id:"作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),s("p",[t._v("上下文中的代码在执行的时候，会创建变量对象的一个作用域链(scope chain)。这个作用域链决定了各级上下文中的代码在访问变量和函数时的顺序。 。")]),t._v(" "),s("p",[t._v("查找变量会从当前上下文的变量对象去查找，如果没找到就去父级作用域查找，一直查找到全局上下文中的变量对象")]),t._v(" "),s("p",[t._v("这么一个查找过程形成的链条就叫做作用域链。")]),t._v(" "),s("h3",{attrs:{id:"全局上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局上下文"}},[t._v("#")]),t._v(" 全局上下文")]),t._v(" "),s("p",[t._v("在浏览器中，全局上下文就是我们常说的 window 对象")]),t._v(" "),s("h3",{attrs:{id:"函数上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数上下文"}},[t._v("#")]),t._v(" 函数上下文")]),t._v(" "),s("p",[t._v("函数执行时形成的私有上下文EC(FN)，正常情况下，代码执行完会出栈后释放;但是特殊情况下，如果当前私有上下文中的某个东西被上下文以外的事物占用了，则上下文不会出栈释放，从而形成不销毁的上下文，形成了个闭包。")]),t._v(" "),s("h2",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("p",[t._v("隔离变量，不同作用域下的同名变量不会有冲突")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var a=1;\nfunction aa() {\n\tvar a=2;\n\tvar b=3;\n\tconsole.log(a);\n\tconsole.log(b);\n  function bb() {\n    var a=2;\n    var b=3;\n    console.log(a);\n    console.log(b);\n  }\n}\nconsole.log(a)\t\t\t//1\nconsole.log(aa())\t\t\t//2 3\nconsole.log(bb())\t\t//error：bb not defined aa没调用\n\n\n")])])]),s("p",[t._v("var只有函数作用域和全局作用域")]),t._v(" "),s("p",[t._v("可以重新声明")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let user;\nlet user; //error\n\nvar user="pete"\nvar user="john"\t\t\n')])])]),s("h2",{attrs:{id:"静态词法作用域-动态作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态词法作用域-动态作用域"}},[t._v("#")]),t._v(" 静态词法作用域／动态作用域")]),t._v(" "),s("p",[t._v("静态词法：函数作用域在定义时决定")]),t._v(" "),s("p",[t._v("动态作用域：函数作用域在调用时决定")]),t._v(" "),s("h1",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t\t\t\t\t\t  typeof\t\t\t\t\t\tinstanceof\t\t\tObject.prototype.toString.call()\n原始值\nundefined     undefined\t\t\t\t\t\t\t\t\t\t\t\t\t[object undefined]\nBoolean\t\t\t\tboolean\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object Boolean]\nNumber\t\t\t\tnumber\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object Number]\nString\t\t\t\tstring\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object String]\nBigint\t\t\t\tbigint\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object Bigint]\nSymbol\t\t\t\tsymbol\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object Symbol]\nNull\t\t\t\t\tobject\t\t\t\t\t\t\t\t\t\t\t\t\t\t[object Null]\n\n\n引用值\nobject\t\t\t\tObject\t\t\t\t\t\ttrue/false\t\t\t[object Object]\n Array \t\t    object\t\t\t\t\t\ttrue/false\t\t\t[object Array]\n Date \t\t\t\tobject\t\t\t\t\t\ttrue/false\t\t\t[object Date]\n Function\t\t\tFunction\t\t\t\t\ttrue/false\t\t\t[object Function]\n")])])]),s("p",[t._v("###数据类型")]),t._v(" "),s("p",[t._v("####Number")]),t._v(" "),s("p",[t._v("数值类型,整数浮点数二进制八进制十六进制都是Number类型")]),t._v(" "),s("p",[t._v("NaN")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(NaN == NaN); // false\n")])])]),s("p",[t._v("对NaN,Not a Number一个特殊数值，计算没有返回值时，返回NaN")]),t._v(" "),s("p",[t._v('​\tconsole.log("number")')]),t._v(" "),s("p",[t._v("​\tisNaN 判断是否不是一个数字，不是数字为true，是为false")]),t._v(" "),s("p",[t._v("####String")]),t._v(" "),s("p",[t._v("单双引号都可，多用双引号")]),t._v(" "),s("p",[t._v("打印文本，文本中有双引号")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tconsole.log('string \"string\"');\n")])])]),s("p",[t._v("打印文本，文本中有双引号双引号,转义字符\\")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tconsole.log('string \\\"\\'string ');\n\t\\\\\t转义\\\n\t\\\"\t转义\"\n\t\\t \t转义tab\n\t\\n\t转义换行\n\t\n")])])]),s("p",[t._v("字符串长度")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var name="tensoul";\n\nconsole.log(name.length);\n')])])]),s("p",[t._v("####Boolean")]),t._v(" "),s("p",[t._v("true flase")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var isLogin=true;\n\nconsole.log(isLogin);\n")])])]),s("p",[t._v("####Null")]),t._v(" "),s("p",[t._v('null 值表示一个空对象指针，这也是给 typeof 传一个 null 会返回"object"的原因:')]),t._v(" "),s("p",[t._v("在定义将来要保存对象值的变量时，建议使用 null 来初始化，不要使用其他值")]),t._v(" "),s("p",[t._v("undefined 值是由 null 值派生而来的，因此 ECMA-262 将它们定义为表面上相等，用等于操作符(==)比较 null 和 undefined 始终返回 true")]),t._v(" "),s("p",[t._v("只要变量要保存对象，而当时又没有那个 对象可保存，就要用 null 来填充该变量。这样就可以保持 null 是空对象指针的语义，并进一步将其 与 undefined 区分开来。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(null == undefined);  // true\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var info={name:"name1",age:19};\n\ninfo=null;\t\t一个对象不再使用可以赋值null\n')])])]),s("p",[t._v("####Undefined")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var flag;\n\nconsole.log(flag);\n\n一个变量申明了，没赋值，默认为undefined\n")])])]),s("p",[t._v("undefined由null衍生")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(undefined==null);\t\t\t//true\n")])])]),s("h3",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" array")]),t._v(" "),s("h4",{attrs:{id:"元素操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素操作方法"}},[t._v("#")]),t._v(" 元素操作方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("arr.push(...items)")]),t._v(" —— 从尾端添加元素，")]),t._v(" "),s("li",[s("code",[t._v("arr.pop()")]),t._v(" —— 从尾端提取元素，")]),t._v(" "),s("li",[s("code",[t._v("arr.shift()")]),t._v(" —— 从首端提取元素，")]),t._v(" "),s("li",[s("code",[t._v("arr.unshift(...items)")]),t._v(" —— 从首端添加元素。")])]),t._v(" "),s("h4",{attrs:{id:"搜索方法-查找某值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索方法-查找某值"}},[t._v("#")]),t._v(" 搜索方法：查找某值")]),t._v(" "),s("h5",{attrs:{id:"arr-indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-indexof"}},[t._v("#")]),t._v(" arr.indexOf()")]),t._v(" "),s("p",[s("code",[t._v("arr.indexOf(item, from)")])]),t._v(" "),s("p",[t._v("从索引 "),s("code",[t._v("from")]),t._v(" 开始搜索 "),s("code",[t._v("item")]),t._v("，如果找到则返回索引，否则返回 "),s("code",[t._v("-1")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"arr-lastindexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-lastindexof"}},[t._v("#")]),t._v(" arr.lastIndexOf()")]),t._v(" "),s("p",[s("code",[t._v("arr.lastIndexOf(item, from)")]),t._v(" ：从数组末from 位置开始查找item，返回其index")]),t._v(" "),s("p",[t._v("—— 和上面相同，只是从右向左搜索。")]),t._v(" "),s("h5",{attrs:{id:"arr-include"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-include"}},[t._v("#")]),t._v(" arr.include()")]),t._v(" "),s("p",[s("code",[t._v("arr.includes(item, from)")]),t._v(" ：判断数组内是否有item")]),t._v(" "),s("p",[t._v("—— 从索引 "),s("code",[t._v("from")]),t._v(" 开始搜索 "),s("code",[t._v("item")]),t._v("，如果找到则返回 "),s("code",[t._v("true")]),t._v("（译注：如果没找到，则返回 "),s("code",[t._v("false")]),t._v("）。")]),t._v(" "),s("p",[s("code",[t._v("includes")]),t._v(" 的一个非常小的差别是它能正确处理"),s("code",[t._v("NaN")]),t._v("，而不像 "),s("code",[t._v("indexOf/lastIndexOf")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -1（应该为 0，但是严格相等 === equality 对 NaN 无效）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true（这个结果是对的）")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"arr-find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-find"}},[t._v("#")]),t._v(" arr.find()")]),t._v(" "),s("p",[t._v("语法如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果返回 true，则返回 item 并停止迭代")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于假值（falsy）的情况，则返回 undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("依次对数组中的每个元素调用该函数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("item")]),t._v(" 是元素。")]),t._v(" "),s("li",[s("code",[t._v("index")]),t._v(" 是它的索引。")]),t._v(" "),s("li",[s("code",[t._v("array")]),t._v(" 是数组本身。")])]),t._v(" "),s("p",[t._v("如果它返回 "),s("code",[t._v("true")]),t._v("，则搜索停止，并返回 "),s("code",[t._v("item")]),t._v("。如果没有搜索到，则返回 "),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("p",[t._v("例如，我们有一个存储用户的数组，每个用户都有 "),s("code",[t._v("id")]),t._v(" 和 "),s("code",[t._v("name")]),t._v(" 字段。让我们找到 "),s("code",[t._v("id == 1")]),t._v(" 的那个用户：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pete"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// John")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"操作方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作方法"}},[t._v("#")]),t._v(" 操作方法")]),t._v(" "),s("h5",{attrs:{id:"arr-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-map"}},[t._v("#")]),t._v(" arr.map()")]),t._v(" "),s("p",[t._v("它对数组的每个元素都调用函数，并返回结果数组。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回新值而不是当前元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将每个元素转换为它的字符串长度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lengths "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bilbo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gandalf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nazgul"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lengths"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5,7,6")]),t._v("\n\n")])])]),s("h5",{attrs:{id:"arr-slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-slice"}},[t._v("#")]),t._v(" arr.slice")]),t._v(" "),s("p",[t._v("它会返回一个新数组，将所有从索引 "),s("code",[t._v("start")]),t._v(" 到 "),s("code",[t._v("end")]),t._v("（不包括 "),s("code",[t._v("end")]),t._v("）的数组项复制到一个新的数组。"),s("code",[t._v("start")]),t._v(" 和 "),s("code",[t._v("end")]),t._v(" 都可以是负数，在这种情况下，从末尾计算索引。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('arr.slice([start], [end])\n\nlet arr = ["t", "e", "s", "t"];\n\nalert( arr.slice(1, 3) ); // e,s（复制从位置 1 到位置 3 的元素）\n\nalert( arr.slice(-2) ); // s,t（复制从位置 -2 到尾端的元素）\n\n')])])]),s("h5",{attrs:{id:"arr-filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-filter"}},[t._v("#")]),t._v(" arr.filter")]),t._v(" "),s("p",[s("code",[t._v("filter")]),t._v(" 返回的是所有匹配元素组成的数组")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" results "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 true item 被 push 到 results，迭代继续")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果什么都没找到，则返回空数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pete"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回前两个用户的数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someUsers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someUsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n\n\n")])])]),s("h5",{attrs:{id:"arr-reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-reduce"}},[t._v("#")]),t._v(" arr.reduce")]),t._v(" "),s("p",[t._v("上一个函数调用的结果将作为第一个参数传递给下一个函数。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("accumulator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("initial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("ul",[s("li",[s("code",[t._v("accumulator")]),t._v(" —— 是上一个函数调用的结果，第一次等于 "),s("code",[t._v("initial")]),t._v("（如果提供了 "),s("code",[t._v("initial")]),t._v(" 的话）。")]),t._v(" "),s("li",[s("code",[t._v("item")]),t._v(" —— 当前的数组元素。")]),t._v(" "),s("li",[s("code",[t._v("index")]),t._v(" —— 当前索引。")]),t._v(" "),s("li",[s("code",[t._v("arr")]),t._v(" —— 数组本身。")])]),t._v(" "),s("p",[t._v("因此，第一个参数本质上是累加器，用于存储所有先前执行的组合结果。最后，它成为 "),s("code",[t._v("reduce")]),t._v(" 的结果。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//一行代码得到一个数组的总和")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//accumulator:(sum, current) => sum + current，initial：0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" current"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15")]),t._v("\n\n\n\n")])])]),s("p",[t._v("如果没有初始值，那么 "),s("code",[t._v("reduce")]),t._v(" 会将数组的第一个元素作为初始值，并从第二个元素开始迭代。。如果数组为空，那么在没有初始值的情况下调用 "),s("code",[t._v("reduce")]),t._v(" 会导致错误。建议始终指定初始值。")]),t._v(" "),s("h5",{attrs:{id:"arr-reduceright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-reduceright"}},[t._v("#")]),t._v(" arr.reduceRight()")]),t._v(" "),s("p",[t._v("遍历为从右到左")]),t._v(" "),s("p",[t._v("array转成字符串")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("arr1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),s("h5",{attrs:{id:"arr-sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-sort"}},[t._v("#")]),t._v(" arr.sort()")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",target:"_blank",rel:"noopener noreferrer"}},[t._v("arr.sort"),s("OutboundLink")],1),t._v(" 方法对数组进行 "),s("strong",[t._v("原位（in-place）")]),t._v(" 排序，更改元素的顺序。(译注：原位是指在此数组内，而非生成一个新数组。)")]),t._v(" "),s("p",[t._v("它还返回排序后的数组，但是返回值通常会被忽略，因为修改了 "),s("code",[t._v("arr")]),t._v(" 本身。")]),t._v(" "),s("p",[s("code",[t._v("Array.sort(compareFunction)")]),t._v("了，"),s("code",[t._v("compareFunction")]),t._v("接受两个值，假设为"),s("code",[t._v("a")]),t._v("和"),s("code",[t._v("b")]),t._v("，"),s("code",[t._v("compareFunction(a, b)")]),t._v("的返回值有三种情况：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("compareFunction(a, b)")]),t._v(" < 0，"),s("code",[t._v("a")]),t._v("将会被排到"),s("code",[t._v("b")]),t._v("的前面。")]),t._v(" "),s("li",[s("code",[t._v("compareFunction(a, b)")]),t._v(" = 0，二者相对位置不发生改变。")]),t._v(" "),s("li",[s("code",[t._v("compareFunction(a, b)")]),t._v(" > 0，"),s("code",[t._v("a")]),t._v("将会被排到"),s("code",[t._v("b")]),t._v("的后面。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接调用，不指定排序func，会按照字符串形式排序")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1,15,2   按照字符串顺序排序了")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定排序func，sort会遍历arr，将arr中的值作为func的参数，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//func返回值:为正,a排在b后面，升序；为负,a排在b前面,降序")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//升序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//retun a-b>0   a>b   b a(升序)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return a-b<0   a<b\t\ta b(降序)")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1, 2, 15")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//降序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return b-a>0   a<b   b a(降序)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return b-a<0   a>b\t\ta b(降序)")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15, 2, 1")]),t._v("\n\n\n")])])]),s("p",[s("strong",[t._v("乱序")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//使用 Math.random()：\n\nvar values = [1, 2, 3, 4, 5];\n\nvalues.sort(function(){\n    return Math.random() - 0.5;\n});\n\nconsole.log(values)\n// Math.random() - 0.5 随机得到一个正数、负数或是 0，如果是正数则降序排列，如果是负数则升序排列，如果是 0 就不变，然后不断的升序或者降序，最终得到一个乱序的数组。\n\n")])])]),s("h4",{attrs:{id:"字符串数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串数组方法"}},[t._v("#")]),t._v(" 字符串数组方法")]),t._v(" "),s("p",[t._v("字符串分割、结构")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("location"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"120.046869,31.633804"')]),t._v("\nitem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120.046869")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31.633804")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t字符串分割\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组解构")]),t._v("\n\n\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//技巧\n//删除最后一个字符\nconst str='str1'\nconsole.log\n\n\n")])])]),s("h5",{attrs:{id:"逆序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逆序"}},[t._v("#")]),t._v(" 逆序")]),t._v(" "),s("p",[t._v("使用场景")]),t._v(" "),s("p",[t._v("![屏幕快照 2022-03-01 下午5.55.44](../H5C3/图片/屏幕快照 2022-03-01 下午5.55.44.png)")]),t._v(" "),s("p",[t._v("使用reverse()")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function reverseString(str) {\n\treturn str.split('').reverse().join('');\n}\nlet str='abcdefg'\nconsole.log(reverseString(str));\n\n\n")])])]),s("p",[t._v("栈方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组模拟栈")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数首字母大写")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//top指向下一个被push的位置，栈顶的后一个")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在函数的原型链上添加方法")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("elem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sarr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("sarr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdefg'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("p",[t._v("由键名：键值组成的集合，键名、键值可以是任何类型")]),t._v(" "),s("p",[t._v("map像object，但是map可以存储任何类型的键名key，map可以使用对象键，object不可，因为object会将所有键都转化为字符串键")]),t._v(" "),s("h4",{attrs:{id:"属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性和方法"}},[t._v("#")]),t._v(" 属性和方法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("new Map()")]),t._v(" —— 创建 map。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.set(key, value)")]),t._v(" —— 根据键存储值，可以链式调用。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("map.set('1', 'str1')\n  .set(1, 'num1')\n  .set(true, 'bool1');\n")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.get(key)")]),t._v(" —— 根据键来返回值，如果 "),s("code",[t._v("map")]),t._v(" 中不存在对应的 "),s("code",[t._v("key")]),t._v("，则返回 "),s("code",[t._v("undefined")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.has(key)")]),t._v(" —— 如果 "),s("code",[t._v("key")]),t._v(" 存在则返回 "),s("code",[t._v("true")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.delete(key)")]),t._v(" —— 删除指定键的值。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.clear()")]),t._v(" —— 清空 map。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("map.size")]),t._v(" —— 返回当前元素个数。")])])]),t._v(" "),s("h4",{attrs:{id:"map-迭代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-迭代"}},[t._v("#")]),t._v(" Map 迭代")]),t._v(" "),s("p",[t._v("如果要在 "),s("code",[t._v("map")]),t._v(" 里使用循环，可以使用以下三个方法：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("mapName.keys()")]),t._v(" —— 遍历并返回所有的键（returns an iterable for keys），")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("mapName.values()")]),t._v(" —— 遍历并返回所有的值（returns an iterable for values），")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("mapName.entries()")]),t._v(" —— 遍历并返回所有的实体（returns an iterable for entries）"),s("code",[t._v("[key, value]")]),t._v("，"),s("code",[t._v("for..of")]),t._v(" 在默认情况下使用的就是这个。")])]),t._v(" "),s("li",[s("p",[t._v("mapName.forEach()")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 对每个键值对 (key, value) 运行 forEach 函数\nrecipeMap.forEach( (value, key, map) => {\n  alert(`${key}: ${value}`); // cucumber: 500 etc\n});\n\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" set")]),t._v(" "),s("p",[t._v("只有键值的集合，值不重复，可以是任何类型，如对象类型")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let set=new set();\n\nlet john = { name: "John" };\nlet pete = { name: "Pete" };\nlet mary = { name: "Mary" };\n\nset.add(john);\nset.delete(john);\nset.has(john)\nset.clear()\nset.size\n\nset.keys() —— 遍历并返回所有的值（returns an iterable object for values），\nset.values() —— 与 set.keys() 作用相同，这是为了兼容 Map，\nset.entries() —— 遍历并返回所有的实体（returns an iterable object for entries）[value, value]，它的存在也是为了兼容 Map。\n')])])]),s("p",[t._v("####输出元素类型")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('console(typeof  "string");\t\t\t\t//string \n\nconsole(typeof  123);\t\t\t\t//number\n\nconsole(typeof ("string"));\t\t\t//string\n')])])]),s("p",[t._v("###数据类型转换")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var message1="123";\t\t//message为string\n\nvar num1=Number(message1);\t\t\t\t\t//num为number\n\n\n\nvar message2="abc";\n\nvar num2=Number(message2);\t\t\t\t//NaN:not a number(NaN是number类型)\n\n\n\nconsole.log(Number(true));\t\t\t//1\n\nconsole.log(Number(false));\t\t\t//0\n\n\n\nconsole.log(Number(undefined));\t\t\t//NaN\n\n\n\nconsolr.log(Number(null));\t\t\t\t//0\n')])])]),s("h2",{attrs:{id:"数字类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[t._v("#")]),t._v(" 数字类型")]),t._v(" "),s("h4",{attrs:{id:"parseint-parsefloat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-parsefloat"}},[t._v("#")]),t._v(" parseInt()/parseFloat()")]),t._v(" "),s("p",[t._v("从字符串中“读取”数字，直到无法读取为止。如果发生 error，则返回收集到的数字。函数 "),s("code",[t._v("parseInt")]),t._v(" 返回一个整数，而 "),s("code",[t._v("parseFloat")]),t._v(" 返回一个浮点数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12.5em'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12.5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12.3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12，只有整数部分被返回了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12.3.4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12.3，在第二个点出停止了读取")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN，第一个符号停止了读取")]),t._v("\n\n")])])]),s("p",[s("code",[t._v("parseInt()")]),t._v(" 函数具有可选的第二个参数。它指定了数字系统的基数，因此 "),s("code",[t._v("parseInt")]),t._v(" 还可以解析十六进制数字、二进制数字等的字符串：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 255")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ff'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 255，没有 0x 仍然有效")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2n9c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123456")]),t._v("\n")])])]),s("p",[t._v("toFixed()")]),t._v(" "),s("p",[t._v("函数 "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed",target:"_blank",rel:"noopener noreferrer"}},[t._v("toFixed(n)"),s("OutboundLink")],1),t._v(" 将数字舍入到小数点后 "),s("code",[t._v("n")]),t._v(" 位，并以字符串形式返回结果。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12.3"')]),t._v("\n")])])]),s("p",[t._v("这会向上或向下舍入到最接近的值，类似于 "),s("code",[t._v("Math.round")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.36")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12.4"')]),t._v("\n")])])]),s("p",[s("code",[t._v("toFixed")]),t._v(" 的结果是一个字符串。如果小数部分比所需要的短，则在结尾添加零：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "12.34000"，在结尾添加了 0，以达到小数点后五位')]),t._v("\n")])])]),s("h1",{attrs:{id:"object对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object对象"}},[t._v("#")]),t._v(" object对象")]),t._v(" "),s("p",[t._v("对象：一组没有特定顺序的值，由键名key和键值value组成")]),t._v(" "),s("p",[t._v("对象的属性或方法由一个名称标识，值可以是数据或者函数")]),t._v(" "),s("h2",{attrs:{id:"基本创建方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本创建方法"}},[t._v("#")]),t._v(" 基本创建方法")]),t._v(" "),s("p",[s("strong",[t._v("new")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let person=new Object();\nperson.name='pname'\nperson.sayName=()=>{\n\tconsole.log(this.name)\n}\n")])])]),s("p",[s("strong",[t._v("对象字面量")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let person= {\n\tname:'pname',\n\tsayName() {\n\t\tconsole.log(this.name)\n\t}\n}\n")])])]),s("h2",{attrs:{id:"对象属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性"}},[t._v("#")]),t._v(" 对象属性")]),t._v(" "),s("p",[s("strong",[t._v("属性访问方法")])]),t._v(" "),s("p",[t._v(".操作符")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("objectName.propertyName\n\n")])])]),s("p",[t._v("[]操作符")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('objectName["propertyName"]\n\n')])])]),s("p",[t._v("区别")]),t._v(" "),s("p",[t._v("[] 操作符是动态的，可以传变量、数字、字符串")]),t._v(" "),s("p",[t._v(".操作符是静态的，必须是有效变量名形式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let name="person name"\n\nperson[name]\t\t\nperson.name    //error\n\nperson["person name"]\nperson.person name \t\t//error\n\nperson[1]\nperson.1\t\t\t//error\n\n')])])]),s("h2",{attrs:{id:"对象属性特征描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象属性特征描述"}},[t._v("#")]),t._v(" 对象属性特征描述")]),t._v(" "),s("p",[t._v("用来配置对象的每个属性")]),t._v(" "),s("p",[t._v("每个对象属性的数据属性，描述这个属性是否可删、可改、可迭代、值配置")]),t._v(" "),s("p",[t._v("每个对象属性的访问器属性，包含一个获取(getter)函数和一个设置(setter)函数")]),t._v(" "),s("h3",{attrs:{id:"数据属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据属性"}},[t._v("#")]),t._v(" 数据属性")]),t._v(" "),s("p",[s("strong",[t._v("4个特性")])]),t._v(" "),s("p",[t._v("数据属性有4个特性描述它们的行为。")]),t._v(" "),s("p",[t._v("前三个默认为true")]),t._v(" "),s("p",[t._v("[[Configurable]]")]),t._v(" "),s("p",[t._v("表示属性是否可以通过delete删除并重新定义,是否可以修改它的特性，以及是否可以把它改为访问器属性。")]),t._v(" "),s("p",[t._v("默认为true，通过defineProperty改为false之后，非严格模式下无法删除对象属性，严格模式下error，")]),t._v(" "),s("p",[t._v("设置为false后，不可再修改了")]),t._v(" "),s("p",[t._v("[[Enumerable]]")]),t._v(" "),s("p",[t._v("表示属性是否可以通过for-in循环返回。")]),t._v(" "),s("p",[t._v("[[writable]]")]),t._v(" "),s("p",[t._v("表示属性的值是否可以被修改")]),t._v(" "),s("p",[t._v("默认为true，通过defineProperty改为false之后，非严格模式下无法删除对象属性，严格模式下error")]),t._v(" "),s("p",[t._v("[[Value]]")]),t._v(" "),s("p",[t._v("包含属性实际的值。这就是前面提到的那个读取和写入属性值的位置。这个特性的默认值为\nundefined。")]),t._v(" "),s("p",[s("strong",[t._v("修改特性")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Object.defineProperty(修改对象名,对象属性名,配置项)\n\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pname'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pname1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//修改值")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不能再修改了")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nperson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pname2"')]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非严格忽略，严格error")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pname1")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"访问器属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问器属性"}},[t._v("#")]),t._v(" 访问器属性")]),t._v(" "),s("p",[t._v("访问器属性不包含数据值,包含一个获取(getter) 函数和一个设置(setter) 函数，")]),t._v(" "),s("p",[t._v("在读取访问器属性时，会调用获取函数,这个函数的责任就是返回一个有效的值。")]),t._v(" "),s("p",[t._v("在写入访问器属性时,会调用设置函数并传入新值,这个函数必须决定对数据做出什么修改。")]),t._v(" "),s("p",[t._v("访问器属性有4个特性描述它们的行为。")]),t._v(" "),s("p",[t._v("[[Configurable]]:表示属性是否可以通过delete删除并重新定义，是否可以修改它的特性，以及是否可以把\n它改为数据属性。默认情况下，所有直接定义在对象.上的属性的这个特性都是true。")]),t._v(" "),s("p",[t._v("[[Enumerable]]：表示属性是否可以通过for-in循环返回。默认情况下，所有直接定义在对象上的属性的这个")]),t._v(" "),s("p",[t._v("特性都是true。")]),t._v(" "),s("p",[t._v("[[Get]]:获取函数,在读取属性时调用。默认值为undefined.")]),t._v(" "),s("p",[t._v("[[Set]]: 设置函数,在写入属性时调用。默认值为undefined。")]),t._v(" "),s("p",[t._v("访问器属性是不能直接定义的，必须使用Object.defineProperty()。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let book = {\n\tyear_:2017,\t\t\t//属性名_  表示私有成员，不希望该属性在对象方法的外部使用\n\tedition:1\t\t\t\t//普通成员\n}\n//define对象的year属性，无论year在不在book中都可以define,创建普通属性来操作私有属性\nObject.defineProperty(book,"year",{\n\tget:function () {\n\t\treturn this.year_\n\t},\n\tset:function (newValue) {\n\t\tif(newValue>2017) {\n\t\t\tthis.year_=newValue;\n\t\t\tthis.edition+=newValue-2017\n\t\t}\n\t}\n})\nbook.year=2019\t\t//调用了set方法,year_=year=2019\nconsole.log(book.edition)   //2\n\n')])])]),s("h4",{attrs:{id:"对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象方法"}},[t._v("#")]),t._v(" 对象方法")]),t._v(" "),s("h5",{attrs:{id:"object-entries-obj"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-entries-obj"}},[t._v("#")]),t._v(" Object.entries(obj)")]),t._v(" "),s("p",[s("code",[t._v("Object.entries()")]),t._v("返回一个数组，其元素是与直接在"),s("code",[t._v("object")]),t._v("上找到的可枚举属性键值对相对应的数组。属性的顺序与通过手动循环对象的属性值所给出的顺序相同。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Object.entries(obj)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("baz")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ ['foo', 'bar'], ['baz', 42] ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array like object")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ ['0', 'a'], ['1', 'b'], ['2', 'c'] ]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象转map")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("baz")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Map { foo: "bar", baz: 42 }')]),t._v("\n\n")])])]),s("h2",{attrs:{id:"设计模式创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计模式创建对象"}},[t._v("#")]),t._v(" 设计模式创建对象")]),t._v(" "),s("h3",{attrs:{id:"工厂模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工厂模式"}},[t._v("#")]),t._v(" "),s("strong",[t._v("工厂模式")])]),t._v(" "),s("p",[t._v("抽象出创建对象和属性赋值的过程，根据传入的属性值批量创建对象，减少冗余重复的属性编写")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function createPerson(name,age,address) {\n\tlet o=new Object();\n\to.name=name;\n\to.age=age;\n\to.getName=function() {\n\t\treturn this.name;\n\t}\n\treturn o;\n}\n\nlet person1=createPerson('person1Name',18,{\n\tname:'address name1',\n\tcode:'100000'\n})\nconsole.log(person1)\nlet person2=createPerson('person2Name',18,{\n\tname:'address name2',\n\tcode:'100000'\n})\nconsole.log(person2)\n\n")])])]),s("p",[t._v("缺点：创建的实例都是绑定在O上的，不能更好的区分")]),t._v(" "),s("h4",{attrs:{id:"基于构造函数创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于构造函数创建对象"}},[t._v("#")]),t._v(" 基于构造函数创建对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Person(name,age) {\n\tthis.name=name;\n\tthis.age=age;\n\tthis.getName=function() {\n\t\treturn this.name\n\t}\n\treturn o;\n}\nlet person1=Person('person1Name',18,{\n\tname:'address1',\n\tcode:'code1'\n})\nconsole.log(person1)\t\t\n\nlet person2=Person('person2Name',18,{\n\tname:'address2',\n\tcode:'code2'\n})\nconsole.log(person2)\t\n")])])]),s("p",[t._v("缺点：每个实例的函数都会占据一定的空间，资源浪费")]),t._v(" "),s("h4",{attrs:{id:"基于构造函数和原型混合创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于构造函数和原型混合创建对象"}},[t._v("#")]),t._v(" 基于构造函数和原型混合创建对象")]),t._v(" "),s("p",[t._v("构造函数与 通函数唯一的区别就是调用方式不同。除此之外，构造函数也是函数。并没有把某个 函数定义为构造函数的特殊语法。任何函数只要使用 new 操作符调用就是构造函数，而不使用 new 操 作符调用的函数就是 通函数。")]),t._v(" "),s("p",[t._v("使用构造函数定义实例对象属性，使用原型对象定义实例对象的共享属性和函数方法，使得属性都有自己的属性值，同时共享函数引用，节省内存空间")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Person(name,age) {\n\tthis.name=name;\n\tthis.age=age;\n\tthis.address=address;\n}\nPerson.prototype.getName=function() {\n\treturn this.name;\n}\n\nlet person1=new Person('person1',18)\nlet person2=new Person('person2',18)\n\nconsole.log(person1.getName())\t\t//person1\nconsole.log(person2.getName())\t\t//person2\nconsole.log(person1.getName===person2.getName)\t\t//true，共享了getName()\nperson2.name='person22'\t\t\t//改变实例属性，不影响其他实例的属性值\nconsole.log(person1.getName())\t\t//person1\t\t\t\t\nconsole.log(person2.getName())\t\t//person22\n")])])]),s("p",[t._v("缺点：每次在创建实例的时候，都会进行原型设置")]),t._v(" "),s("h3",{attrs:{id:"基于动态原型创建对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于动态原型创建对象"}},[t._v("#")]),t._v(" 基于动态原型创建对象")]),t._v(" "),s("p",[t._v("每个函数都会创建一个 prototype 属性，这个属性是一个对象，包含应该由特定引用类型的实例 共享的属性和方法。")]),t._v(" "),s("p",[t._v("使用原型对象的好处 是，在它上面定义的属性和方法可以被对象实例共享。原来在构造函数中直接赋给对象实例的值，可以 直接赋值给它们的原型，")]),t._v(" "),s("h2",{attrs:{id:"原型、原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型、原型链"}},[t._v("#")]),t._v(" 原型、原型链")]),t._v(" "),s("p",[t._v("构造函数都有一个原型对象prototype，这个原型对象又有constructor属性指回构造函数，构造函数创建的实例有一个指针"),s("code",[t._v("_proto_")]),t._v("指向原型对象")]),t._v(" "),s("p",[t._v("如果原型是另一个类型的实例，那么这个原型本身有一个内部指针指向另一个原型，相应地另一个原型也有一个指针指向另一个构造函 数。这样就在实例和原型之间构造了一条原型链。这就是原型链的基本构想。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://camo.githubusercontent.com/9a69b0f03116884e80cf566f8542cf014a4dd043fce6ce030d615040461f4e5a/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f6d717971696e6766656e672f426c6f672f496d616765732f70726f746f74797065352e706e67",alt:"原型链示意图"}}),t._v(" "),s("h1",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("在 JavaScript 中，函数是对象类型。可被调用的“行为对象（action object）”。我们不仅可以调用它们，还能把它们当作对象来处理：增/删属性，按引用传递等。")]),t._v(" "),s("p",[t._v("函数名是保存指针的变量")]),t._v(" "),s("p",[t._v("console.log(func)")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("console.log(func)\t\t\t//打印函数\nfunc()\t\t\t//执行函数\n")])])]),s("h2",{attrs:{id:"创建函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建函数"}},[t._v("#")]),t._v(" 创建函数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("函数声明法\nfunction func() {\n\n}\n函数表达式\nlet func=function () {\n\n}\n\nfunction func() {\n\t...\n\treturn function () {\n\t\n\t}\n}\n")])])]),s("p",[t._v("函数属性")]),t._v(" "),s("p",[t._v("一个内建属性 “length”，它返回函数入参的个数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("functionName.length\n")])])]),s("h2",{attrs:{id:"this指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this指向"}},[t._v("#")]),t._v(" this指向")]),t._v(" "),s("p",[s("strong",[t._v("标准函数中，this指向函数／方法的调用者")])]),t._v(" "),s("p",[t._v("创建构造函数实例时，需要new出这个实例，此时this就指向这个实例")]),t._v(" "),s("p",[t._v("普通函数执行，不new实例，this指向全局window")]),t._v(" "),s("p",[t._v("在对象方法内，对象调用了方法，方法的this指向该对象")]),t._v(" "),s("p",[t._v("匿名函数中的this指向window")]),t._v(" "),s("p",[s("strong",[t._v("箭头函数中,this指向 定义箭头函数的上下文（箭头函数在哪个上下文里定义的就指向哪里）")])]),t._v(" "),s("p",[t._v("使用对象方法call() apply() bind()可以改变this指向")]),t._v(" "),s("p",[t._v("基于Function.prototype上的 "),s("code",[t._v("apply 、 call 和 bind")]),t._v("调用模式，这三个方法都可以显示的指定调用函数的 this 指向。"),s("code",[t._v("apply")]),t._v("接收参数的是数组，"),s("code",[t._v("call")]),t._v("接受参数列表，`` bind"),s("code",[t._v("方法通过传入一个对象，返回一个")]),t._v(" this "),s("code",[t._v("绑定了传入对象的新函数。这个函数的")]),t._v("this"),s("code",[t._v("指向除了使用")]),t._v("new `时会被改变，其他情况下都不会改变。若为空默认是指向全局对象window。")]),t._v(" "),s("h3",{attrs:{id:"具体例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体例子"}},[t._v("#")]),t._v(" 具体例子")]),t._v(" "),s("p",[t._v("创建构造函数实例时，需要new出这个实例，此时this就指向这个实例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function Person(name) {\t\t\t//构造函数函数名大写\n\tthis.name=name;\n}\nvar p=new Person('person_name');\t\t//p为实例\nconsole.log(p.name)\t\t\t//this指向p\n\n")])])]),s("p",[t._v("普通函数执行，不new实例，this指向全局window")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function person() {\n\tthis.name=name\n}\nperson('person_name')\nconsole.log(window.name)\n\n\n")])])]),s("p",[t._v("在对象方法内，对象调用了方法，方法的this指向该对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var value=10;\nvar obj={\n\tvalue:100,\n\tget:()=>{\n\t\tconsole.log(this.value);\n\t}\n}\nobj.get();\t\t\t//100\n\n\n")])])]),s("p",[t._v("匿名函数中的this指向window")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sport")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user_sport'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'userName1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'userName2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("clickHander")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//user对象调用clickHander,this指向user")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _this"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保存")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is playing'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _this"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nuser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clickHander")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[s("strong",[t._v("箭头函数中,this指向 定义箭头函数的上下文（箭头函数在哪个上下文里定义的就指向哪里）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//aa，箭头函数内this指向箭头函数的定义上下文")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined,普通函数内this指向调用者，b是window调用的，window对象中没有name所以undefined")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"函数方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数方法"}},[t._v("#")]),t._v(" 函数方法")]),t._v(" "),s("h3",{attrs:{id:"call-apply-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind"}},[t._v("#")]),t._v(" call() apply() bind()")]),t._v(" "),s("h2",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("引用了另一个函数作用域的变量的函数，通常在嵌套函数中实现")]),t._v(" "),s("p",[t._v("函数有函数作用域，外部函数无法访问内部函数的变量，内部函数可以访问外部。")]),t._v(" "),s("p",[t._v("那么将内部函数return出去，就可以实现在别的作用域中访问")]),t._v(" "),s("p",[s("strong",[t._v("闭包形成的条件")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("函数的嵌套")]),t._v(" "),s("li",[t._v("内部函数引用外部函数的局部变量，延长外部函数的变量生命周期")])]),t._v(" "),s("p",[s("strong",[t._v("闭包的特性")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1、内部函数可以访问定义他们外部函数的参数和变量。(作用域链的向上查找，把外围的作用域中的变量值存储在内存中而不是在函数调用完毕后销毁)设计私有的方法和变量，避免全局变量的污染。")]),t._v(" "),s("p",[t._v("1.1.闭包是密闭的容器，，类似于set、map容器，存储数据的")]),t._v(" "),s("p",[t._v("1.2.闭包是一个对象，存放数据的格式为 key-value 形式")])]),t._v(" "),s("li",[s("p",[t._v("2、函数嵌套函数")])]),t._v(" "),s("li",[s("p",[t._v("3、本质是将函数内部和外部连接起来。优点是可以读取函数内部的变量，让这些变量的值始终保存在内存中，不会在函数被调用之后自动清除")])])]),t._v(" "),s("p",[s("strong",[t._v("闭包的用途")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("模仿块级作用域")]),t._v(" "),s("li",[t._v("保护外部函数的变量 能够访问函数定义时所在的词法作用域(阻止其被回收)")]),t._v(" "),s("li",[t._v("封装私有化变量")]),t._v(" "),s("li",[t._v("创建模块")])]),t._v(" "),s("p",[s("strong",[t._v("闭包应用场景")]),t._v("：回调函数")]),t._v(" "),s("p",[t._v("一个事件绑定的回调方法;")]),t._v(" "),s("p",[t._v("发送ajax请求成功|失败的回调;")]),t._v(" "),s("p",[t._v("setTimeout的延时回调;")]),t._v(" "),s("p",[t._v("或者一个函数内部返回另一个匿名函数")]),t._v(" "),s("p",[s("strong",[t._v("闭包的优点")]),t._v("：延长局部变量的生命周期")]),t._v(" "),s("p",[s("strong",[t._v("闭包缺点")]),t._v("：会导致函数的变量一直保存在内存中，过多的闭包可能会导致内存泄漏")]),t._v(" "),s("h2",{attrs:{id:"回调函数callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数callback"}},[t._v("#")]),t._v(" 回调函数callback")]),t._v(" "),s("p",[t._v("某个操作执行结束后，自动被调用的函数")]),t._v(" "),s("p",[t._v("例子")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//callback：隐藏后回调函数，显示弹窗")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slow'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...hided...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不写成callback，先弹窗，再隐藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...hided...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"闭包-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包-2"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("p",[t._v("函数嵌套：在一个函数内部定义函数")]),t._v(" "),s("p",[t._v("闭包：内部函数可以访问其所在外部函数的变量和参数，即使外部函数return了")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//闭包实现sum(a)(b)=a+b")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//sum(1)(2)=3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写法1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//写法2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h5",{attrs:{id:"settimeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#settimeout"}},[t._v("#")]),t._v(" setTimeOut()")]),t._v(" "),s("p",[t._v("将函数推迟到一段时间间隔之后再执行")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timerId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("delay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),s("p",[t._v("参数说明：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("func|code")])]),t._v(" "),s("p",[t._v("想要执行的函数或代码字符串。 一般传入的都是函数。由于某些历史原因，支持传入代码字符串，但是不建议这样做。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("delay")])]),t._v(" "),s("p",[t._v("执行前的延时，以毫秒为单位（1000 毫秒 = 1 秒），默认值是 0；")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("arg1")]),t._v("，"),s("code",[t._v("arg2")]),t._v("…")]),t._v(" "),s("p",[t._v("要传入被执行函数（或代码字符串）的参数列表（IE9 以下不支持）")])])]),t._v(" "),s("h5",{attrs:{id:"cleartimeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cleartimeout"}},[t._v("#")]),t._v(" clearTimeOut()")]),t._v(" "),s("p",[t._v("取消调度")]),t._v(" "),s("h4",{attrs:{id:"function-立即调用函数表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-立即调用函数表达式"}},[t._v("#")]),t._v(" (function(){})();立即调用函数表达式")]),t._v(" "),s("p",[t._v("在之前，JavaScript 中只有 "),s("code",[t._v("var")]),t._v(" 这一种声明变量的方式，并且这种方式声明的变量没有块级作用域，程序员们就发明了一种模仿块级作用域的方法。这种方法被称为“立即调用函数表达式”（immediately-invoked function expressions，IIFE）。")]),t._v(" "),s("p",[t._v("需要使用圆括号把该函数表达式包起来，以告诉 JavaScript，这个函数是在另一个表达式的上下文中创建的，因此它是一个函数表达式：它不需要函数名，可以立即调用。")]),t._v(" "),s("h3",{attrs:{id:"call-apply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#call-apply"}},[t._v("#")]),t._v(" call()  apply()")]),t._v(" "),s("p",[t._v("通过call(),apply可以改变函数执行主体，使得执行主体(对象)可以直接调用该函数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function sum(num1,num2) {\n\treturn num1+num2\n}\n\nvar Person={}\nconsole.log(sum.call(Person,1,2))\nconsole.log(sum.call(Person,[1,2]))\n\n")])])]),s("h4",{attrs:{id:"改变指向-call-apply-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改变指向-call-apply-bind"}},[t._v("#")]),t._v(" 改变指向 call() apply() bind()")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var value=10;\nvar obj={\n\tvalue=20;\n}\n\nvar method=function() {\n\tconsole.log(this.value)\n}\n\nmethod();\t\t\t//10\n\n")])])]),s("h1",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("h3",{attrs:{id:"插入标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入标签"}},[t._v("#")]),t._v(" 插入标签")]),t._v(" "),s("p",[t._v("示例html代码：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("color:red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" test2\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n")])])]),s("p",[t._v("获得id为test的DOM对象，下面就不一一获取了。")]),t._v(" "),s("div",{staticClass:"language-dart extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("h4",{attrs:{id:"innerhtml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innerhtml"}},[t._v("#")]),t._v(" innerHTML")]),t._v(" "),s("p",[t._v("描述：也就是从对象的起始位置到终止位置的全部内容,包括Html标签。")]),t._v(" "),s("p",[t._v("上例中的test.innerHTML的值也就是"),s("code",[t._v("“test1 test2 ”。")])]),t._v(" "),s("h4",{attrs:{id:"innertext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innertext"}},[t._v("#")]),t._v(" innerText")]),t._v(" "),s("p",[t._v("描述：从起始位置到终止位置的内容, 但它去除Html标签 。")]),t._v(" "),s("p",[t._v("上例中的test.innerText的值也就是"),s("code",[t._v("“test1 test2”")]),t._v(", 其中"),s("code",[t._v("span")]),t._v("标签去除了。")]),t._v(" "),s("h4",{attrs:{id:"outerhtml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outerhtml"}},[t._v("#")]),t._v(" outerHTML")]),t._v(" "),s("p",[t._v("描述：除了包含innerHTML的全部内容外, 还包含对象标签本身。")]),t._v(" "),s("p",[t._v("上例中的test.outerHTML的值也就是"),s("code",[t._v("test1 test2")])]),t._v(" "),s("p",[t._v("完整示例：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("color:red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" test2\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert(test.innerHTML)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("innerHTML内容"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert(test.innerText)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("inerText内容"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javascript:alert(test.outerHTML)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("outerHTML内容"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language-awk extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//test.innerHTML结果：<span style="color:red">test1</span> test2\n//test.innerText结果:test1 test2\n//test.outerHTML结果：<div id="test"><span style="color:red">test1</span> test2</div>\n\n\n')])])]),s("h4",{attrs:{id:"textcontent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#textcontent"}},[t._v("#")]),t._v(" textContent")]),t._v(" "),s("p",[t._v("描述：textContent 属性设置或返回指定节点的文本内容，以及它的所有后代。")]),t._v(" "),s("p",[t._v("提示：有时，此属性可用于取代 nodeValue 属性，但是请记住此属性同时会返回所有子节点的文本。")]),t._v(" "),s("p",[t._v("得到的结果跟innerText的结果是一样的。")]),t._v(" "),s("blockquote",[s("p",[t._v("注释：Internet Explorer 8 以及更早的版本不支持此属性。")])]),t._v(" "),s("h4",{attrs:{id:"兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[t._v("#")]),t._v(" 兼容性")]),t._v(" "),s("p",[s("code",[t._v("innerHTML")]),t._v("所有浏览器兼容；"),s("code",[t._v("innerText")]),t._v("与"),s("code",[t._v("outerHTML")]),t._v("虽然主流浏览器，如谷歌，火狐，IE7-IE11，QQ等都已支持（这里提到的谷歌火狐等都是最新浏览器的版本），但是"),s("code",[t._v("W3C")]),t._v("的标准属性就是"),s("code",[t._v("innerHTML")]),t._v(",因此，尽可能地去使用"),s("code",[t._v("innerHTML")]),t._v("，而少用"),s("code",[t._v("innerText")]),t._v("与"),s("code",[t._v("outerHTML")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"insertadjacenthtml-位置-html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insertadjacenthtml-位置-html"}},[t._v("#")]),t._v(" insertAdjacentHTML(位置,HTML)")]),t._v(" "),s("h4",{attrs:{id:"insertadjacenttext-位置-text"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insertadjacenttext-位置-text"}},[t._v("#")]),t._v(" insertAdjacentText(位置,Text)")]),t._v(" "),s("p",[t._v('"beforebegin" :  插入到当前元素前面，作为前一个同胞节点')]),t._v(" "),s("p",[t._v("afterbegin:插入到当前元素内部，作为新的子节点或放在第一个子节点前面")]),t._v(" "),s("p",[t._v("beforeend:插入到当前元素内部，作为新的子节点或放在最后一个子节点前面")]),t._v(" "),s("p",[t._v("afterend:插入到当前元素后面，作为下一个同胞节点")]),t._v(" "),s("h2",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),s("h3",{attrs:{id:"事件对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件对象"}},[t._v("#")]),t._v(" 事件对象")]),t._v(" "),s("h4",{attrs:{id:"dom事件对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom事件对象"}},[t._v("#")]),t._v(" DOM事件对象")]),t._v(" "),s("p",[t._v("事件处理程序的唯一参数event")]),t._v(" "),s("p",[t._v("event对象的属性／方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("stopPropagation()")]),t._v(" "),s("th",[t._v("取消后续事件捕获或冒泡，当bubbles为true时可以调用")])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"事件流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件流"}},[t._v("#")]),t._v(" 事件流")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://www.w3.org/TR/DOM-Level-3-Events/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DOM 事件"),s("OutboundLink")],1),t._v("标准描述了事件传播的 3 个阶段：")]),t._v(" "),s("ol",[s("li",[t._v("捕获阶段（Capturing phase）—— 事件（从 Window）向下走近元素。")]),t._v(" "),s("li",[t._v("目标阶段（Target phase）—— 事件到达目标元素。")]),t._v(" "),s("li",[t._v("冒泡阶段（Bubbling phase）—— 事件从元素上开始冒泡。")])]),t._v(" "),s("p",[t._v("事件首先通过祖先链向下到达元素（捕获阶段），然后到达目标（目标阶段），最后上升（冒泡阶段），在途中调用处理程序。")]),t._v(" "),s("p",[t._v("页面上table表格，click某个表格单元td")]),t._v(" "),s("p",[t._v("捕获型事件流：table—tbody—tr—td  向内传播")]),t._v(" "),s("p",[t._v("冒泡事件流：td—tr—tbody—table 向外传播")]),t._v(" "),s("p",[t._v("一个事件流包含三个阶段")]),t._v(" "),s("p",[t._v("捕获—目标—冒泡")]),t._v(" "),s("h3",{attrs:{id:"事件处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[t._v("#")]),t._v(" 事件处理")]),t._v(" "),s("h3",{attrs:{id:"event对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event对象"}},[t._v("#")]),t._v(" Event对象")]),t._v(" "),s("p",[t._v("事件以event对象存在，每触发一个事件都会产生一个event对象")]),t._v(" "),s("p",[t._v("event对象在不同浏览器实现有差异")]),t._v(" "),s("p",[s("strong",[t._v("获取event对象")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1、作为事件处理程序的参数传入获取\n2、window.event获取\n\n\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let btn=document.getElementById(\"button\");\nbtn.addEventListener('click',(event)=>{\n\t//方法1:作为事件处理程序的参数传入\n\tconsole.log(event);\n\t//方法2:通过windwo.event获取\n\tlet windowEvent=window.event;\n\tconsole.log(windowEvent)\n\t//判断是否一致\n\tconsole.log(windowEvent===event)\n})\n\n\n")])])]),s("p",[s("strong",[t._v("获取event对象的目标元素")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("e.srcElement\ne.target\n\n\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//先定义事件获取对象\nlet EventUtil={\n\tgetEvent:function(event) {\n\t\treturn event||window.event\n\t}\n}\n//再获取目标元素\nlet btn=document.getElementById("button");\nbtn.addEventListener("click",function(event) {\n\t//获取对象，如果传参形式获取到了，那么event===event，否则event===window.event\n\tlet event=EventUtil.getEvent(event);\n\t//两种方式获取目标元素  event.srcElement 和 event.target\n\tlet NoIETarget=event.target\t\t//chrome safari\n\tlet IETarget=event.srcElement\n})\n\n\n')])])]),s("p",[t._v("不同浏览器支持获取方式不同")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//适配不同浏览器，定义事件获取对象\nlet EventUtil={\n\tgetEvent:function(event) {\n\t\treturn event || window.event\n\t}\n\tgetTarget:function(event) {\n\t\treturn e.target||e.srcElement\n\t}\n}\n\n\n")])])]),s("h3",{attrs:{id:"事件循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),s("p",[t._v("JS是单线程的，")]),t._v(" "),s("p",[t._v("为了防止一个函数执行时间过长阻塞后面的代码，所以会先将同步代码压入执行栈中，依次执行，将异步代码推入异步队列。")]),t._v(" "),s("p",[t._v("异步队列又分为宏任务队列和微任务队列，因为宏任务队列的执行时间较长，所以微任务队列要优先于宏任务队列。")]),t._v(" "),s("p",[t._v("微任务队列的代表就是，"),s("code",[t._v("Promise.then")]),t._v("，"),s("code",[t._v("MutationObserver")]),t._v("，宏任务的话就是`setImmediate setTimeout setInterval")]),t._v(" "),s("h2",{attrs:{id:"拖动事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拖动事件"}},[t._v("#")]),t._v(" 拖动事件")]),t._v(" "),s("p",[t._v("默认情况下，图片、链接和文本是可拖动的，这意味着无须额外代码用户便可以拖动它们。文本只\n有在被选中后才可以拖动，而图片和链接在任意时候都是可以拖动的。\n我们也可以让其他元素变得可以拖动。HTML5在所有HTML元素上规定了-一个draggable属性，\n表示元素是否可以拖动。图片和链接的draggable属性自动被设置为true,而其他所有元素此属性的默认值为false。如果想让其他元素可拖动，或者不允许图片和链接被拖动，都可以设置这个属性。")]),t._v(" "),s("p",[t._v("某元素被拖动，会按顺序触发以下事件")]),t._v(" "),s("p",[t._v("dragstart:开始拖动那一刻触发，目标元素this为被拖动元素")]),t._v(" "),s("p",[t._v("drag：拖住不放持续触发")]),t._v(" "),s("p",[t._v("dragenter:拖动到某个有效放置触发，this为有效位置元素")]),t._v(" "),s("p",[t._v("dragover:触发完dragenter后立即触发dragover，并且持续出发直到离开当前有效放置范围，this为有效位置元素")]),t._v(" "),s("p",[t._v("dragleave:触发完dragover后触发dragleave，this为有效位置元素")]),t._v(" "),s("p",[t._v("drop:放到了目标位置触发")]),t._v(" "),s("p",[t._v("dragend：拖动到目标位置释放元素时触发")]),t._v(" "),s("h1",{attrs:{id:"es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[t._v("#")]),t._v(" ES6")]),t._v(" "),s("p",[t._v("栈 堆")]),t._v(" "),s("p",[t._v("基本数据类型number、str、boolean存在栈上")]),t._v(" "),s("h3",{attrs:{id:"var-let-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const"}},[t._v("#")]),t._v(" var\\let\\const")]),t._v(" "),s("p",[t._v("var:没有块级作用域")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var会变量提升")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//变量提升，返回undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var可以重复定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var没有块级作用域，es5只有全局和函数作用域，var在大括号之后还可以访问")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//var声明for循环的变量，循环外还可以输出，循环结束输出无意义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//9")]),t._v("\n\n")])])]),s("p",[t._v("let：更完美的var, 没有直接废弃var是考虑到兼容性问题，考虑到执行效率")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let取消预解析，变量声明不会提升，必须在声明后使用")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//报错")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let不可以重复定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//error")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let存在块级作用域，es6存在块级作用域")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//error")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//let声明的for循环变量，for作用域外访问不到，error:not declared")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//error:i not declared")]),t._v("\n\n")])])]),s("p",[t._v("const声明")]),t._v(" "),s("p",[t._v("const声明一个常量，代码中有数据在执行过程中不变化，声明为常量")]),t._v(" "),s("p",[t._v("在声明时必须初始化，")]),t._v(" "),s("p",[t._v("不能重新赋值，")]),t._v(" "),s("p",[t._v("不能重复声明")]),t._v(" "),s("p",[t._v("基本值类型数据不可以修改，引用类型的值可以修改，因为const是对引用地址修改的限制，只要不改变内存地址，可以改该内存地址上的值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const age=26\nage=36\t\t\t//error\n\nconst arr=[10,10,12]\narr[1]=11\t\t\t// [10,11,12]，ok\n")])])]),s("h3",{attrs:{id:"箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),s("p",[t._v("let c=a=>b")]),t._v(" "),s("p",[t._v("用a执行b，返回给c")]),t._v(" "),s("p",[t._v("a=>b")]),t._v(" "),s("p",[t._v("a：只有一个参数,可以省略括号；没有参数／多个不可省略；")]),t._v(" "),s("p",[t._v("b：一行可省{}，多行不可；都别省！")]),t._v(" "),s("p",[t._v("回调callback函数")]),t._v(" "),s("p",[t._v("在某些行为action完成后调用的函数")]),t._v(" "),s("p",[t._v("异步执行某项功能的函数应该提供一个 "),s("code",[t._v("callback")]),t._v(" 参数用于在相应事件完成时调用。")]),t._v(" "),s("h3",{attrs:{id:"spread语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spread语法"}},[t._v("#")]),t._v(" spread语法")]),t._v(" "),s("p",[t._v("展开可迭代对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let arr = [3, 5, 1];\n//...arr    将可迭代对象arr展开成3,5,1\nalert( Math.max(...arr) ); // 5（spread 语法把数组转换为参数列表）\n\n\nlet arr = [3, 5, 1];\nlet arr2 = [8, 9, 15];\nlet merged = [0, ...arr, 2, ...arr2];   // 0,3,5,1,2,8,9,15（0，然后是 arr，然后是 2，然后是 arr2）\n\n//使用 spread 语法将字符串转换为字符数组\nlet str = "Hello";\nalert( [...str] ); // H,e,l,l,o\n//使用 Array.from 来实现将字符串转换为字符数组\nalert( Array.from(str) ); // H,e,l,l,o\n//两种方法区别：Array.from 适用于类数组对象也适用于可迭代对象，Spread 语法只适用于可迭代对象。\n\n\n\n')])])]),s("p",[t._v("Map")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let level1Map=new Map()\ntemp.forEach((item,index)=>{\nlevel1Map.set(item.deps_id,index)\n})\nfor (let entry of level1Map) { // 与 recipeMap.entries() 相同\nconsole.log(entry); // cucumber,500 (and so on)\n}\n\n\n")])])]),s("h3",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" promise")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//executor执行函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n")])])]),s("p",[t._v("传递给 "),s("code",[t._v("new Promise")]),t._v(" 的函数被称为 "),s("strong",[t._v("executor")]),t._v("。")]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("new Promise")]),t._v(" 被创建，executor 会自动运行并尝试执行一项工作。")]),t._v(" "),s("p",[t._v("尝试结束后，如果成功则调用 "),s("code",[t._v("resolve")]),t._v("，如果出现 error 则调用 "),s("code",[t._v("reject")]),t._v("。")]),t._v(" "),s("p",[t._v("由 "),s("code",[t._v("new Promise")]),t._v(" 构造器返回的 "),s("code",[t._v("promise")]),t._v(" 对象具有以下内部属性：")]),t._v(" "),s("p",[t._v("![屏幕快照 2021-09-05 上午10.17.06](../H5C3/图片/屏幕快照 2021-09-05 上午10.17.06.png)")]),t._v(" "),s("p",[s("strong",[t._v("executor 只能调用一个 "),s("code",[t._v("resolve")]),t._v(" 或一个 "),s("code",[t._v("reject")]),t._v("。")])]),t._v(" "),s("p",[t._v("任何状态的更改都是最终的。所有其他的再对 "),s("code",[t._v("resolve")]),t._v(" 和 "),s("code",[t._v("reject")]),t._v(" 的调用都会被忽略：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"…"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被忽略")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"…"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 被忽略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[s("strong",[t._v("Resolve/reject 可以立即进行")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let promise = new Promise(function(resolve, reject) {\n  // 不花时间去做这项工作\n  resolve(123); // 立即给出结果：123\n});\n\n\n")])])]),s("h4",{attrs:{id:"promise封装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise封装"}},[t._v("#")]),t._v(" promise封装")]),t._v(" "),s("p",[t._v("封装settimeout")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function delay(ms) {\n\treturn new Promise(resolve=>setTimeput(resolve,ms))\n}\ndelay(3000).then(()=>{\n\talert('after 3000ms');\n\treturn delay(2000);\n\t}).then(value=>{\n\t....\n\t})\n")])])]),s("p",[s("strong",[t._v("访问state和result")])]),t._v(" "),s("p",[t._v("Promise 对象的 "),s("code",[t._v("state")]),t._v(" 和 "),s("code",[t._v("result")]),t._v(" 属性都是内部的。我们无法直接访问它们。使用 "),s("code",[t._v(".then")]),t._v("/"),s("code",[t._v(".catch")]),t._v("/"),s("code",[t._v(".finally")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("then")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("promise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* handle a successful result */")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* handle an error */")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("p",[s("code",[t._v(".then")]),t._v(" 的第一个参数是一个函数，该函数将在 promise resolved 后运行并接收结果。")]),t._v(" "),s("p",[s("code",[t._v(".then")]),t._v(" 的第二个参数也是一个函数，该函数将在 promise rejected 后运行并接收 error。")]),t._v(" "),s("p",[t._v("catch")]),t._v(" "),s("p",[t._v("只对 error 感兴趣，那么我们可以使用 "),s("code",[t._v("null")]),t._v(" 作为第一个参数："),s("code",[t._v(".then(null, errorHandlingFunction)")]),t._v("。或者我们也可以使用 "),s("code",[t._v(".catch(errorHandlingFunction)")]),t._v("，"),s("code",[t._v(".catch(f)")]),t._v(" 调用是 "),s("code",[t._v(".then(null, f)")]),t._v(" 的完全的模拟，它只是一个简写形式。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Whoops!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .catch(f) 与 promise.then(null, f) 一样")]),t._v("\npromise"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 1 秒后显示 "Error: Whoops!"')]),t._v("\n\n")])])]),s("h1",{attrs:{id:"异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步编程"}},[t._v("#")]),t._v(" 异步编程")]),t._v(" "),s("h2",{attrs:{id:"同步、异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步、异步"}},[t._v("#")]),t._v(" 同步、异步")]),t._v(" "),s("p",[t._v("同步：")]),t._v(" "),s("p",[t._v("上一个任务结束后下一个任务才执行，如果一个上一个任务执行需要很长时间，就会阻塞下一个人")]),t._v(" "),s("p",[t._v("异步：")]),t._v(" "),s("p",[t._v("一个任务分成两段，先执行第一段，然后转而执行下一个任务，等做好了准备，再回过头执行第二段。排在异步任务后面的代码，不用等待异步任务结束会马上运行，也就是说，"),s("strong",[t._v("异步任务不具有”堵塞“效应")]),t._v("。")]),t._v(" "),s("p",[t._v("高阶函数")]),t._v(" "),s("p",[t._v("函数的一个参数是函数，函数的返回值也是函数")]),t._v(" "),s("h3",{attrs:{id:"柯里化-currying"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柯里化-currying"}},[t._v("#")]),t._v(" 柯里化（Currying）???")]),t._v(" "),s("p",[t._v("是一个辅助函数，这个辅助函数实现对函数的转换")]),t._v(" "),s("p",[t._v("将 "),s("code",[t._v("f(a,b,c)")]),t._v(" 转换为可以被以 "),s("code",[t._v("f(a)(b)(c)")]),t._v(" 的形式进行调用。")]),t._v(" "),s("p",[t._v("参数可以传一个或多个，柯里化的原函数都可以正常调用，并且如果")]),t._v(" "),s("p",[t._v("参数数量不足，则返回原函数的偏函数／部分函数。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function sum(a,b,c,d) {\n\treturn a+b+c+d\n}\n\nfunction curring(fn) {\n\tlet args=[]\n\tconst inner=(arr=[])=>{\n\t\targs.push(...arr)\n\t\treturn args.length\n\t}\n}\n")])])]),s("h2",{attrs:{id:"异步编程-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步编程-2"}},[t._v("#")]),t._v(" 异步编程")]),t._v(" "),s("h3",{attrs:{id:"单线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单线程"}},[t._v("#")]),t._v(" 单线程")]),t._v(" "),s("p",[t._v('所谓"单线程"，就是指一次只能完成一件任务。如果有多个任务，就必须排队，前面一个任务完成，再执行后面一个任务，以此类推。')]),t._v(" "),s("p",[t._v("这种模式的好处是实现起来比较简单，执行环境相对单纯；坏处是只要有一个任务耗时很长，后面的任务都必须排队等着，会拖延整个程序的执行。常见的浏览器无响应（假死），往往就是因为某一段Javascript代码长时间运行（比如死循环），导致整个页面卡在这个地方，其他任务无法执行。")]),t._v(" "),s("h3",{attrs:{id:"同步与异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步与异步"}},[t._v("#")]),t._v(" 同步与异步")]),t._v(" "),s("p",[t._v('"同步模式"就是上一段的模式，后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的、同步的；')]),t._v(" "),s("p",[t._v('"异步模式"则完全不同，每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。')]),t._v(" "),s("p",[t._v('"异步模式"非常重要。在浏览器端，耗时很长的操作都应该异步执行，避免浏览器失去响应，最好的例子就是Ajax操作。在服务器端，"异步模式"甚至是唯一的模式，因为执行环境是单线程的，如果允许同步执行所有http请求，服务器性能会急剧下降，很快就会失去响应。')]),t._v(" "),s("h3",{attrs:{id:"如何进行异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何进行异步编程"}},[t._v("#")]),t._v(" 如何进行异步编程")]),t._v(" "),s("p",[t._v("F1:回调函数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现点击——隐藏——提示隐藏了——其他事件")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//callback：隐藏后回调函数，显示弹窗")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f1:点击")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slow'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//f2:隐藏")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...hided...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不写成callback，先弹窗，再隐藏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...hided...'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("F2:事件监听")]),t._v(" "),s("p",[t._v("F3:发布订阅")]),t._v(" "),s("p",[t._v("F4:promise")]),t._v(" "),s("h1",{attrs:{id:"模块化moudule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化moudule"}},[t._v("#")]),t._v(" 模块化moudule")]),t._v(" "),s("p",[t._v("模块内")]),t._v(" "),s("p",[t._v("写法1：单独export")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//export文件\nexport const name='name1'\nexport function sayName() {\n\treturn 'name:'+name;\n}\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//import文件\n<script>\n\timport {name,sayName} from '相对路径'\n<\/script>\n")])])]),s("p",[t._v("写法2：统一export")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name='name'\nfunction sayName() {\n\treturn 'name:'+name;\n}\n\nexport {name,sayName}\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import {name,sayName} from '相对路径'\n")])])]),s("p",[t._v("默认export deafult ，import的时候可以自定义名字，export模块内只能写一次")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const name='name'\nfunction sayName() {\n\treturn 'name:'+name;\n}\n\nexport {name,sayName}\n\nconst obj={\n\t...\n}\nexport default obj\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import objName,{name,sayName} from '...'\n")])])]),s("p",[t._v("全部import,引入export模块内所有")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import * as f from '...'\n")])])]),s("p",[t._v("类模块化")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("class Person {\n\tconstructor() {\n\t\n\t}\n\tsayName() {\n\t\t...\n\t}\n}\nexport default Person;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Person from '相对路径'\n")])])]),s("h1",{attrs:{id:"api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" api")]),t._v(" "),s("h3",{attrs:{id:"math"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[t._v("#")]),t._v(" Math")]),t._v(" "),s("p",[t._v("Math.ceil()向大取整")]),t._v(" "),s("p",[t._v("Math.floor()向小取整")]),t._v(" "),s("p",[t._v("Math.round四舍五入")]),t._v(" "),s("h1",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),s("h4",{attrs:{id:"回流-重排-重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流-重排-重绘"}},[t._v("#")]),t._v(" 回流／重排 & 重绘")]),t._v(" "),s("p",[t._v("浏览器使用流式布局模型 (Flow Based Layout)。")]),t._v(" "),s("p",[t._v("浏览器会把"),s("code",[t._v("HTML")]),t._v("解析成"),s("code",[t._v("DOM")]),t._v("，把"),s("code",[t._v("CSS")]),t._v("解析成"),s("code",[t._v("CSSOM")]),t._v("，"),s("code",[t._v("DOM")]),t._v("和"),s("code",[t._v("CSSOM")]),t._v("合并就产生了"),s("code",[t._v("Render Tree")]),t._v("。")]),t._v(" "),s("p",[t._v("有了"),s("code",[t._v("RenderTree")]),t._v("，我们就知道了所有节点的样式，然后计算他们在页面上的大小和位置，最后把节点绘制到页面上。")]),t._v(" "),s("p",[s("strong",[t._v("回流必将引起重绘，重绘不一定会引起回流")])]),t._v(" "),s("p",[s("strong",[t._v("重排")])]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("Render Tree")]),t._v("中部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程称为回流／重排。")]),t._v(" "),s("p",[t._v("会导致回流的操作：")]),t._v(" "),s("ul",[s("li",[t._v("页面首次渲染")]),t._v(" "),s("li",[t._v("浏览器窗口大小发生改变")]),t._v(" "),s("li",[t._v("元素尺寸或位置发生改变")]),t._v(" "),s("li",[t._v("元素内容变化（文字数量或图片大小等等）")]),t._v(" "),s("li",[t._v("元素字体大小变化")]),t._v(" "),s("li",[t._v("添加或者删除"),s("strong",[t._v("可见")]),t._v("的"),s("code",[t._v("DOM")]),t._v("元素")]),t._v(" "),s("li",[t._v("激活"),s("code",[t._v("CSS")]),t._v("伪类（例如："),s("code",[t._v(":hover")]),t._v("）")]),t._v(" "),s("li",[t._v("查询某些属性或调用某些方法")])]),t._v(" "),s("p",[t._v("一些常用且会导致回流的属性和方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("clientWidth")]),t._v("、"),s("code",[t._v("clientHeight")]),t._v("、"),s("code",[t._v("clientTop")]),t._v("、"),s("code",[t._v("clientLeft")])]),t._v(" "),s("li",[s("code",[t._v("offsetWidth")]),t._v("、"),s("code",[t._v("offsetHeight")]),t._v("、"),s("code",[t._v("offsetTop")]),t._v("、"),s("code",[t._v("offsetLeft")])]),t._v(" "),s("li",[s("code",[t._v("scrollWidth")]),t._v("、"),s("code",[t._v("scrollHeight")]),t._v("、"),s("code",[t._v("scrollTop")]),t._v("、"),s("code",[t._v("scrollLeft")])]),t._v(" "),s("li",[s("code",[t._v("scrollIntoView()")]),t._v("、"),s("code",[t._v("scrollIntoViewIfNeeded()")])]),t._v(" "),s("li",[s("code",[t._v("getComputedStyle()")])]),t._v(" "),s("li",[s("code",[t._v("getBoundingClientRect()")])]),t._v(" "),s("li",[s("code",[t._v("scrollTo()")])])]),t._v(" "),s("p",[s("strong",[t._v("重绘")])]),t._v(" "),s("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如："),s("code",[t._v("color")]),t._v("、"),s("code",[t._v("background-color")]),t._v("、"),s("code",[t._v("visibility")]),t._v("等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),t._v(" "),s("p",[s("strong",[t._v("如何避免")])]),t._v(" "),s("p",[t._v("CSS")]),t._v(" "),s("ul",[s("li",[t._v("避免使用"),s("code",[t._v("table")]),t._v("布局。")]),t._v(" "),s("li",[t._v("尽可能在"),s("code",[t._v("DOM")]),t._v("树的最末端改变"),s("code",[t._v("class")]),t._v("。")]),t._v(" "),s("li",[t._v("避免设置多层内联样式。")]),t._v(" "),s("li",[t._v("将动画效果应用到"),s("code",[t._v("position")]),t._v("属性为"),s("code",[t._v("absolute")]),t._v("或"),s("code",[t._v("fixed")]),t._v("的元素上。")]),t._v(" "),s("li",[t._v("避免使用"),s("code",[t._v("CSS")]),t._v("表达式（例如："),s("code",[t._v("calc()")]),t._v("）。")])]),t._v(" "),s("p",[t._v("JavaScript")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("避免频繁操作样式，最好一次性重写"),s("code",[t._v("style")]),t._v("属性，或者将样式列表定义为"),s("code",[t._v("class")]),t._v("并一次性更改"),s("code",[t._v("class")]),t._v("属性。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let ad=document.getElementById("ad");\n//不要单独写\nad.style.width="100px";\nad.style.height="100px";\nad.style.background="100px";\n...\n\n//直接写一个类\ndiv .ad {\n\twidth:100px;\n\theight:100px;\n\tbackground:red;\n}\n')])])])]),t._v(" "),s("li",[s("p",[t._v("避免频繁操作"),s("code",[t._v("DOM")]),t._v("，创建一个"),s("code",[t._v("documentFragment")]),t._v("，在它上面应用所有"),s("code",[t._v("DOM操作")]),t._v("，最后再把它添加到文档中。")])]),t._v(" "),s("li",[s("p",[t._v("需要复杂处理的元素，先为元素设置"),s("code",[t._v("display: none")]),t._v("，操作结束后再把它显示出来。因为在"),s("code",[t._v("display")]),t._v("属性为"),s("code",[t._v("none")]),t._v("的元素上进行的"),s("code",[t._v("DOM")]),t._v("操作不会引发回流和重绘。")])]),t._v(" "),s("li",[s("p",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。操作缓存起来的变量，避免频繁读取")])]),t._v(" "),s("li",[s("p",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])])]),t._v(" "),s("h1",{attrs:{id:"防抖节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防抖节流"}},[t._v("#")]),t._v(" 防抖节流")]),t._v(" "),s("h1",{attrs:{id:"ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),s("p",[t._v("通过XMLHttpRequest对象向服务器发送异步请求，获取服务器返回的数据，操作dom更新页面")]),t._v(" "),s("h3",{attrs:{id:"xmlhttprequest对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest对象"}},[t._v("#")]),t._v(" XMLHttpRequest对象")]),t._v(" "),s("p",[t._v("abort():如果请求已经发送，则停止当前请求。")]),t._v(" "),s("p",[t._v("getAllResponseHeaders():获取所有HTTP请求的响应头部，作为键值返回，如果没有收到响应，则返回null")]),t._v(" "),s("p",[t._v('getResponseHeader("key")函数:获取指定key的HTTP响应头，如果没有收到响应或者响应中不存在key对象\n的报头，则返回null,')]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v('open("method","URL",[asyncFlag],"userName".["password"])函数:\n建立对服务器的调用。\n5中专国器\n。method参数表示请求方式，可以为GET, POST或者PUT.\n。URL参数表示请求的路径，可以使相对路径，也可以时绝对路径。\n。后面3个是可选参数，分别表示是否异步，用户名，密码，其中asyncFlag = true表示异步，asyncFlag =\nfalse表示同步，默认值为true,')]),t._v(" "),s("li",[t._v("send(content)函数:向服务器发送请求。")]),t._v(" "),s("li",[t._v("setRequestHeader(key,value)函数:设置请求头中属性为key的值为value,在设置请求头之前需要先调用\nopen(函数，设置header将随着send()函数一起发送。")])])])},e=[]},558:function(t,a,s){"use strict";s.r(a);var n=s(557),e=s(479);for(var r in e)["default"].indexOf(r)<0&&function(t){s.d(a,t,(function(){return e[t]}))}(r);var p=s(17),o=Object(p.a)(e.default,n.a,n.b,!1,null,null,null);a.default=o.exports}}]);